"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[622],{3905:function(e,t,o){o.d(t,{Zo:function(){return s},kt:function(){return d}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function c(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?c(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):c(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},s=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),y=p(o),d=r,h=y["".concat(i,".").concat(d)]||y[d]||u[d]||c;return o?n.createElement(h,l(l({ref:t},s),{},{components:o})):n.createElement(h,l({ref:t},s))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=o.length,l=new Array(c);l[0]=y;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var p=2;p<c;p++)l[p]=o[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}y.displayName="MDXCreateElement"},7109:function(e,t,o){o.r(t),o.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return u}});var n=o(7462),r=o(3366),c=(o(7294),o(3905)),l=["components"],a={sidebar_position:1},i="Create 'Deploy to Cyclic' button",p={unversionedId:"how-to/create-deploy-to-cyclic-button",id:"how-to/create-deploy-to-cyclic-button",title:"Create 'Deploy to Cyclic' button",description:"Follow these steps to create a button that will allow users to fork your repo and deploy to Cyclic in one action.",source:"@site/docs/how-to/create-deploy-to-cyclic-button.md",sourceDirName:"how-to",slug:"/how-to/create-deploy-to-cyclic-button",permalink:"/docs/how-to/create-deploy-to-cyclic-button",draft:!1,editUrl:"https://github.com/cyclic-software/docs/blob/main/docs/how-to/create-deploy-to-cyclic-button.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Transactions",permalink:"/docs/concepts/transactions"},next:{title:"Main entry point does not exist",permalink:"/docs/troubleshooting/main-entry-point-does-not-exist"}},s={},u=[{value:"Easy",id:"easy",level:2},{value:"HTML",id:"html",level:2}],y={toc:u};function d(e){var t=e.components,o=(0,r.Z)(e,l);return(0,c.kt)("wrapper",(0,n.Z)({},y,o,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"create-deploy-to-cyclic-button"},"Create 'Deploy to Cyclic' button"),(0,c.kt)("p",null,"Follow these steps to create a button that will allow users to fork your repo and deploy to Cyclic in one action."),(0,c.kt)("h2",{id:"easy"},"Easy"),(0,c.kt)("p",null,"Just copy this markdown directly into your README.md file inside your repo on Github. The target ",(0,c.kt)("inlineCode",{parentName:"p"},"https://deploy.cyclic.sh/")," uses http referrer header to determine the source repo to use in targeting the ",(0,c.kt)("inlineCode",{parentName:"p"},"app.cyclic.sh")," deploy path."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-markdown"},"[![Deploy to Cyclic](https://deploy.cyclic.sh/button.svg)](https://deploy.cyclic.sh/)\n")),(0,c.kt)("p",null,"Renders as:"),(0,c.kt)("p",null,(0,c.kt)("a",{parentName:"p",href:"https://deploy.cyclic.sh/"},(0,c.kt)("img",{parentName:"a",src:"https://deploy.cyclic.sh/button.svg",alt:"Deploy to Cyclic"}))),(0,c.kt)("h2",{id:"html"},"HTML"),(0,c.kt)("p",null,"If you would like to embed HTML directly into a site with a configured target you can set the ",(0,c.kt)("inlineCode",{parentName:"p"},"app.cyclic.sh")," path yourself. Replace ",(0,c.kt)("inlineCode",{parentName:"p"},"GH_LOGIN")," and ",(0,c.kt)("inlineCode",{parentName:"p"},"GH_REPO")," with the values for your Github user name and repository name."),(0,c.kt)("p",null,"For example if you wanted to create a fork and deploy button for: ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/seekayel/express-hello-world"},"https://github.com/seekayel/express-hello-world")),(0,c.kt)("p",null,"The values would be:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-toml"},"GH_LOGIN=seekayel\nGH_REPO=express-hello-world\n")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-html"},'<a href="https://deploy.cyclic.sh/GH_LOGIN/GH_REPO">\n    <img src="https://deploy.cyclic.sh/button.svg" />\n</a>\n')),(0,c.kt)("p",null,"Renders as:"),(0,c.kt)("a",{href:"https://deploy.cyclic.sh/GH_LOGIN/GH_REPO"},(0,c.kt)("img",{src:"https://deploy.cyclic.sh/button.svg"})))}d.isMDXComponent=!0}}]);