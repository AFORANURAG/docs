"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[422],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),l=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},m=function(e){var n=l(e.components);return o.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=l(t),d=r,f=u["".concat(c,".").concat(d)]||u[d]||p[d]||i;return t?o.createElement(f,a(a({ref:n},m),{},{components:t})):o.createElement(f,a({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7167:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var o=t(7462),r=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:3},c="Using MongoDB",l={unversionedId:"how-to/using-mongo-db",id:"how-to/using-mongo-db",title:"Using MongoDB",description:"Atlas Configuration",source:"@site/docs/how-to/using-mongo-db.md",sourceDirName:"how-to",slug:"/how-to/using-mongo-db",permalink:"/docs/how-to/using-mongo-db",draft:!1,editUrl:"https://github.com/cyclic-software/docs/blob/main/docs/how-to/using-mongo-db.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Add a custom domain",permalink:"/docs/how-to/add-custom-domain-for-an-app"},next:{title:"Main entry point does not exist",permalink:"/docs/troubleshooting/main-entry-point-does-not-exist"}},m={},p=[{value:"Atlas Configuration",id:"atlas-configuration",level:2},{value:"Connections in a Serverless Runtime",id:"connections-in-a-serverless-runtime",level:2},{value:"Connection Example with Express.JS",id:"connection-example-with-expressjs",level:2}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"using-mongodb"},"Using MongoDB"),(0,i.kt)("h2",{id:"atlas-configuration"},"Atlas Configuration"),(0,i.kt)("p",null,"Cyclic apps do not have static IP's for white listing with Atlas and Cyclic does not offer private networking on free tier."),(0,i.kt)("p",null,"Setting ",(0,i.kt)("inlineCode",{parentName:"p"},"0.0.0.0/0")," will enable access to your service cluster from all IP's and make it possible for services to authenticate via connection string."),(0,i.kt)("h2",{id:"connections-in-a-serverless-runtime"},"Connections in a Serverless Runtime"),(0,i.kt)("p",null,"MongoDB is not an on-demand database and its connection mechanism is persistent, it can also take a moment to establish the connection for the first time. For best performance, avoid making a connection inside a route handler."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Serverless environments are restarted frequently, often right when a request is made. "),(0,i.kt)("li",{parentName:"ul"},"A route handler may already be trying to serve the request before the ",(0,i.kt)("inlineCode",{parentName:"li"},"MongoClient.connect")," method finishes connecting."),(0,i.kt)("li",{parentName:"ul"},"This may result in a failure to respond from the server. ")),(0,i.kt)("p",null,"This behavior is possible in traditional long-running environments but occurs much less often  because the connection event happens only when the server is restarted. "),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"MongoClient connection in a serverless runtime")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"It is very important to make sure the ",(0,i.kt)("inlineCode",{parentName:"p"},"MongoClient.connect")," is finished before allowing your app to serve requests. "))),(0,i.kt)("h2",{id:"connection-example-with-expressjs"},"Connection Example with Express.JS"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Listen for requests after mongo has connected")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"MongoDB connections should be established before a server's ",(0,i.kt)("inlineCode",{parentName:"p"},"listen")," method is called. To make sure this happens every time, call the ",(0,i.kt)("inlineCode",{parentName:"p"},"listen")," method in the connect callback. "))),(0,i.kt)("p",null,"Requests will be held in the Cyclic runtime to make sure none are ever missed, even if the connection takes a moment."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'\nconst { MongoClient} = require(\'mongodb\');\nconst express = require(\'express\');\nconst app = express();\n\nconst uri = process.env.MONGO_CONNECTION_STRING;\nconst client = new MongoClient(uri);\n\napp.get("/items/:my_item", async (req, res) => {\n    let my_item = req.params.my_item;\n    let item = await client.db("my_db")\n                .collection("my_collection")\n                .findOne({my_item: my_item})\n\n    return res.json(item)\n})\n\nclient.connect(err => {\n    if(err){ console.error(err); return false;}\n    // connection to mongo is successful, listen for requests\n    app.listen(3000, () => {\n        console.log("listening for requests");\n    })\n});\n\n')))}d.isMDXComponent=!0}}]);