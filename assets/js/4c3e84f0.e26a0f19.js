"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[622],{3905:function(e,t,o){o.d(t,{Zo:function(){return s},kt:function(){return d}});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var p=n.createContext({}),i=function(e){var t=n.useContext(p),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},s=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),y=i(o),d=r,h=y["".concat(p,".").concat(d)]||y[d]||u[d]||a;return o?n.createElement(h,c(c({ref:t},s),{},{components:o})):n.createElement(h,c({ref:t},s))}));function d(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,c=new Array(a);c[0]=y;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<a;i++)c[i]=o[i];return n.createElement.apply(null,c)}return n.createElement.apply(null,o)}y.displayName="MDXCreateElement"},7109:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return i},toc:function(){return s},default:function(){return y}});var n=o(7462),r=o(3366),a=(o(7294),o(3905)),c=["components"],l={sidebar_position:1},p="Create 'Deploy to Cyclic' button",i={unversionedId:"how-to/create-deploy-to-cyclic-button",id:"how-to/create-deploy-to-cyclic-button",isDocsHomePage:!1,title:"Create 'Deploy to Cyclic' button",description:"Follow these steps to create a button that will allow users to fork your repo and deploy to Cyclic in one action.",source:"@site/docs/how-to/create-deploy-to-cyclic-button.md",sourceDirName:"how-to",slug:"/how-to/create-deploy-to-cyclic-button",permalink:"/docs/how-to/create-deploy-to-cyclic-button",editUrl:"https://github.com/cyclic-software/docs/edit/main/website/docs/how-to/create-deploy-to-cyclic-button.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Transactions",permalink:"/docs/concepts/transactions"},next:{title:"Main entry point does not exist",permalink:"/docs/troubleshooting/main-entry-point-does-not-exist"}},s=[{value:"Easy",id:"easy",children:[]},{value:"HTML",id:"html",children:[]}],u={toc:s};function y(e){var t=e.components,o=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"create-deploy-to-cyclic-button"},"Create 'Deploy to Cyclic' button"),(0,a.kt)("p",null,"Follow these steps to create a button that will allow users to fork your repo and deploy to Cyclic in one action."),(0,a.kt)("h2",{id:"easy"},"Easy"),(0,a.kt)("p",null,"Just copy this markdown directly into your README.md file inside your repo on github. The target ",(0,a.kt)("inlineCode",{parentName:"p"},"https://deploy.cyclic.app/")," uses http referrer header to determine the source repo to use in targeting the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.cyclic.sh")," deploy path."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"[![Deploy to Cyclic](https://deploy.cyclic.app/button.svg)](https://deploy.cyclic.app/)\n")),(0,a.kt)("p",null,"Renders as:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://deploy.cyclic.app/"},(0,a.kt)("img",{parentName:"a",src:"https://deploy.cyclic.app/button.svg",alt:"Deploy to Cyclic"}))),(0,a.kt)("h2",{id:"html"},"HTML"),(0,a.kt)("p",null,"If you would like to embed HTML directly into a site with a configured target you can set the ",(0,a.kt)("inlineCode",{parentName:"p"},"app.cyclic.sh")," path yourself. Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"GH_LOGIN")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"GH_REPO")," with the values for your Github user name and repository name."),(0,a.kt)("p",null,"For example if you wanted to create a fork and deploy button for: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/seekayel/express-hello-world"},"https://github.com/seekayel/express-hello-world")),(0,a.kt)("p",null,"The values would be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},"GH_LOGIN=seekayel\nGH_REPO=express-hello-world\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<a href="https://app.cyclic.sh/api/app/deploy/GH_LOGIN/GH_REPO">\n    <img src="https://deploy.cyclic.app/button.svg" />\n</a>\n')),(0,a.kt)("p",null,"Renders as:"),(0,a.kt)("a",{href:"https://app.cyclic.sh/api/app/deploy/GH_LOGIN/GH_REPO"},(0,a.kt)("img",{src:"https://deploy.cyclic.app/button.svg"})))}y.isMDXComponent=!0}}]);